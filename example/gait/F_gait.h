
//This file should be called F_gait.h
//This is autogenerated code. Edit by hand at your peril!

#include <stdint.h>
#include <stdbool.h>
#include <assert.h>

//the dtimer_t type
typedef uint64_t dtimer_t;

//For each policy, we need an enum type for the state machine

enum gait_policy_Matching_states { 
	POLICY_STATE_gait_Matching_init, 
	POLICY_STATE_gait_Matching_initial_contact, 
	POLICY_STATE_gait_Matching_loading_response, 
	POLICY_STATE_gait_Matching_mid_stance, 
	POLICY_STATE_gait_Matching_terminal_stance, 
	POLICY_STATE_gait_Matching_pre_swing, 
	POLICY_STATE_gait_Matching_initial_swing, 
	POLICY_STATE_gait_Matching_mid_swing, 
	POLICY_STATE_gait_Matching_terminal_swing, 
	POLICY_STATE_gait_Matching_mismatch
};


//IO to the function gait
typedef struct {
	uint8_t np;
	
} io_gait_t;

//monitor state and vars:
typedef struct {
	enum gait_policy_Matching_states _policy_Matching_state;
	//internal vars
	dtimer_t x;
	uint64_t ds1;
	uint64_t dts;
	uint64_t ss;
	uint64_t std;
	uint64_t ds2;
	uint64_t itm;
	uint64_t mtt;
	uint64_t tti;
	
	
} monitorvars_gait_t;












//This function is provided in "F_gait.c"
//It sets up the variable structures to their initial values
void gait_init_all_vars(monitorvars_gait_t* me, io_gait_t* io, uint64_t ds1, uint64_t dts, uint64_t ss, uint64_t std, uint64_t ds2, uint64_t itm, uint64_t mtt, uint64_t tti);

//This function is provided in "F_gait.c"
//It will run the synthesised monitor and call the controller function
void gait_run_via_monitor(monitorvars_gait_t* me, io_gait_t* io);

//This function is provided from the user
//It is the controller function
extern void gait_run(io_gait_t* inputs);

//monitor functions


//This function is provided in "F_gait.c"
//It will run the monitor for gait's policy Matching
void gait_run_monitor_Matching(monitorvars_gait_t* me, io_gait_t* io);

//This function is provided in "F_gait.c"
//It will check the state of the monitor monitor code
//It returns one of the following:
//0: always true (safe)
//1: currently true (safe)
//2: currently false (unsafe)
//3: always false (unsafe)
uint8_t gait_check_rv_status_Matching(monitorvars_gait_t* me);


